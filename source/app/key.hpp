#pragma once

#include <glad/glad.h>
#include <GLFW/glfw3.h>

// ========================================================================== //
// Key Enumeration
// ========================================================================== //

namespace dib {

/** Enumeration of keyboard keys **/
enum class Key
{
  kKeySpace = GLFW_KEY_SPACE,
  kKeyApostrophe = GLFW_KEY_APOSTROPHE,
  kKeyComma = GLFW_KEY_COMMA,
  kKeyMinus = GLFW_KEY_MINUS,
  kKeyPeriod = GLFW_KEY_PERIOD,
  kKeySlash = GLFW_KEY_SLASH,
  kKey0 = GLFW_KEY_0,
  kKey1 = GLFW_KEY_1,
  kKey2 = GLFW_KEY_2,
  kKey3 = GLFW_KEY_3,
  kKey4 = GLFW_KEY_4,
  kKey5 = GLFW_KEY_5,
  kKey6 = GLFW_KEY_6,
  kKey7 = GLFW_KEY_7,
  kKey8 = GLFW_KEY_8,
  kKey9 = GLFW_KEY_9,
  kKeySemicolon = GLFW_KEY_SEMICOLON,
  kKeyEqual = GLFW_KEY_EQUAL,
  kKeyA = GLFW_KEY_A,
  kKeyB = GLFW_KEY_B,
  kKeyC = GLFW_KEY_C,
  kKeyD = GLFW_KEY_D,
  kKeyE = GLFW_KEY_E,
  kKeyF = GLFW_KEY_F,
  kKeyG = GLFW_KEY_G,
  kKeyH = GLFW_KEY_H,
  kKeyI = GLFW_KEY_I,
  kKeyJ = GLFW_KEY_J,
  kKeyK = GLFW_KEY_K,
  kKeyL = GLFW_KEY_L,
  kKeyM = GLFW_KEY_M,
  kKeyN = GLFW_KEY_N,
  kKeyO = GLFW_KEY_O,
  kKeyP = GLFW_KEY_P,
  kKeyQ = GLFW_KEY_Q,
  kKeyR = GLFW_KEY_R,
  kKeyS = GLFW_KEY_S,
  kKeyT = GLFW_KEY_T,
  kKeyU = GLFW_KEY_U,
  kKeyV = GLFW_KEY_V,
  kKeyW = GLFW_KEY_W,
  kKeyX = GLFW_KEY_X,
  kKeyY = GLFW_KEY_Y,
  kKeyZ = GLFW_KEY_Z,
  kKeyLeftBracket = GLFW_KEY_LEFT_BRACKET,
  kKeyBackslash = GLFW_KEY_BACKSLASH,
  kKeyRightBracket = GLFW_KEY_RIGHT_BRACKET,
  kKeyGraveAccent = GLFW_KEY_GRAVE_ACCENT,
  kKeyWorld1 = GLFW_KEY_WORLD_1,
  kKeyWorld2 = GLFW_KEY_WORLD_2,
  kKeyEscape = GLFW_KEY_ESCAPE,
  kKeyEnter = GLFW_KEY_ENTER,
  kKeyTab = GLFW_KEY_TAB,
  kKeyBackspace = GLFW_KEY_BACKSPACE,
  kKeyInsert = GLFW_KEY_INSERT,
  kKeyDelete = GLFW_KEY_DELETE,
  kKeyRight = GLFW_KEY_RIGHT,
  kKeyLeft = GLFW_KEY_LEFT,
  kKeyDown = GLFW_KEY_DOWN,
  kKeyUp = GLFW_KEY_UP,
  kKeyPageUp = GLFW_KEY_PAGE_UP,
  kKeyPageDown = GLFW_KEY_PAGE_DOWN,
  kKeyHome = GLFW_KEY_HOME,
  kKeyEnd = GLFW_KEY_END,
  kKeyCapsLock = GLFW_KEY_CAPS_LOCK,
  kKeyScrollLock = GLFW_KEY_SCROLL_LOCK,
  kKeyNumLock = GLFW_KEY_NUM_LOCK,
  kKeyPrintScreen = GLFW_KEY_PRINT_SCREEN,
  kKeyPause = GLFW_KEY_PAUSE,
  kKeyF1 = GLFW_KEY_F1,
  kKeyF2 = GLFW_KEY_F2,
  kKeyF3 = GLFW_KEY_F3,
  kKeyF4 = GLFW_KEY_F4,
  kKeyF5 = GLFW_KEY_F5,
  kKeyF6 = GLFW_KEY_F6,
  kKeyF7 = GLFW_KEY_F7,
  kKeyF8 = GLFW_KEY_F8,
  kKeyF9 = GLFW_KEY_F9,
  kKeyF10 = GLFW_KEY_F10,
  kKeyF11 = GLFW_KEY_F11,
  kKeyF12 = GLFW_KEY_F12,
  kKeyF13 = GLFW_KEY_F13,
  kKeyF14 = GLFW_KEY_F14,
  kKeyF15 = GLFW_KEY_F15,
  kKeyF16 = GLFW_KEY_F16,
  kKeyF17 = GLFW_KEY_F17,
  kKeyF18 = GLFW_KEY_F18,
  kKeyF19 = GLFW_KEY_F19,
  kKeyF20 = GLFW_KEY_F20,
  kKeyF21 = GLFW_KEY_F21,
  kKeyF22 = GLFW_KEY_F22,
  kKeyF23 = GLFW_KEY_F23,
  kKeyF24 = GLFW_KEY_F24,
  kKeyF25 = GLFW_KEY_F25,
  kKeyKeypad0 = GLFW_KEY_KP_0,
  kKeyKeypad1 = GLFW_KEY_KP_1,
  kKeyKeypad2 = GLFW_KEY_KP_2,
  kKeyKeypad3 = GLFW_KEY_KP_3,
  kKeyKeypad4 = GLFW_KEY_KP_4,
  kKeyKeypad5 = GLFW_KEY_KP_5,
  kKeyKeypad6 = GLFW_KEY_KP_6,
  kKeyKeypad7 = GLFW_KEY_KP_7,
  kKeyKeypad8 = GLFW_KEY_KP_8,
  kKeyKeypad9 = GLFW_KEY_KP_9,
  kKeyKeypadDecimal = GLFW_KEY_KP_DECIMAL,
  kKeyKeypadDivide = GLFW_KEY_KP_DIVIDE,
  kKeyKeypadMultiply = GLFW_KEY_KP_MULTIPLY,
  kKeyKeypadSubtract = GLFW_KEY_KP_SUBTRACT,
  kKeyKeypadAdd = GLFW_KEY_KP_ADD,
  kKeyKeypadEnter = GLFW_KEY_KP_ENTER,
  kKeyKeypadEqual = GLFW_KEY_KP_EQUAL,
  kKeyShiftLeft = GLFW_KEY_LEFT_SHIFT,
  kKeyCtrlLeft = GLFW_KEY_LEFT_CONTROL,
  kKeyAltLeft = GLFW_KEY_LEFT_ALT,
  kKeySuperLeft = GLFW_KEY_LEFT_SUPER,
  kKeyShiftRight = GLFW_KEY_RIGHT_SHIFT,
  kKeyCtrlRight = GLFW_KEY_RIGHT_CONTROL,
  kKeyAltRight = GLFW_KEY_RIGHT_ALT,
  kKeySuperRight = GLFW_KEY_RIGHT_SUPER,
  kKeyMenu = GLFW_KEY_MENU
};

}